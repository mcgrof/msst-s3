version: '3.8'

services:
  # MinIO - High-performance S3 compatible storage
  minio:
    image: quay.io/minio/minio:latest
    container_name: msst-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DOMAIN: localhost
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - s3-network

  # LocalStack - AWS services emulator
  localstack:
    image: localstack/localstack:latest
    container_name: msst-localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3
      - DEBUG=0
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - localstack-data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - s3-network

  # Garage - Distributed S3-compatible storage
  garage:
    image: dxflrs/garage:v0.9.1
    container_name: msst-garage
    ports:
      - "3900:3900"  # S3 API
      - "3902:3902"  # Admin API
    environment:
      GARAGE_RPC_SECRET: "$(openssl rand -hex 32)"
      GARAGE_ADMIN_TOKEN: "admin-token"
      GARAGE_METRICS_TOKEN: "metrics-token"
    volumes:
      - garage-meta:/var/lib/garage/meta
      - garage-data:/var/lib/garage/data
      - ./docker/garage.toml:/etc/garage.toml
    command: ["garage", "server"]
    networks:
      - s3-network

  # SeaweedFS - Distributed storage system
  seaweedfs:
    image: chrislusf/seaweedfs:latest
    container_name: msst-seaweedfs
    ports:
      - "8333:8333"  # S3 API
      - "9333:9333"  # Master server
      - "8080:8080"  # Volume server
      - "8888:8888"  # Filer
    environment:
      WEED_MASTER_PORT: 9333
      WEED_VOLUME_PORT: 8080
      WEED_FILER_PORT: 8888
      WEED_S3_PORT: 8333
    command: "server -s3 -s3.port=8333"
    volumes:
      - seaweedfs-data:/data
    networks:
      - s3-network

  # Ceph with RadosGW (S3 interface)
  # Note: This is a simplified single-node setup for testing
  ceph:
    image: quay.io/ceph/demo:latest
    container_name: msst-ceph
    environment:
      CEPH_DEMO_UID: demo
      CEPH_DEMO_ACCESS_KEY: demo-access-key
      CEPH_DEMO_SECRET_KEY: demo-secret-key
      CEPH_DEMO_BUCKET: demo-bucket
      RGW_NAME: localhost
      NETWORK_AUTO_DETECT: 4
      CEPH_PUBLIC_NETWORK: 172.20.0.0/24
    ports:
      - "8082:8080"  # RadosGW S3 API
    volumes:
      - ceph-data:/var/lib/ceph
    networks:
      s3-network:
        ipv4_address: 172.20.0.10

volumes:
  minio-data:
  localstack-data:
  garage-meta:
  garage-data:
  seaweedfs-data:
  ceph-data:

networks:
  s3-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24