#!/usr/bin/env python3
"""
Test 003: Delete an object

Tests object deletion operations.
Verifies that objects can be deleted and are no longer accessible.
"""

from common.fixtures import TestFixture
from common.validators import (
    validate_object_exists,
    validate_object_not_exists,
    validate_error_code
)
from botocore.exceptions import ClientError

def test_003(s3_client, config):
    """Delete an object"""
    fixture = TestFixture(s3_client, config)

    try:
        # Create a test bucket and object
        bucket_name = fixture.create_test_bucket()
        object_key = fixture.create_test_object(bucket_name, size=1024)

        # Verify object exists
        validate_object_exists(s3_client, bucket_name, object_key)

        # Delete the object
        response = s3_client.delete_object(bucket_name, object_key)
        assert 'DeleteMarker' in response or 'VersionId' in response or response['ResponseMetadata']['HTTPStatusCode'] == 204, \
            "Delete response unexpected"

        # Verify object no longer exists
        validate_object_not_exists(s3_client, bucket_name, object_key)

        # Try to get the deleted object - should fail
        try:
            s3_client.get_object(bucket_name, object_key)
            assert False, "Getting deleted object should fail"
        except ClientError as e:
            validate_error_code(e, 'NoSuchKey')

        # List objects and verify our object is gone
        objects = s3_client.list_objects(bucket_name)
        object_keys = [obj['Key'] for obj in objects]
        assert object_key not in object_keys, f"Object {object_key} still in object list after deletion"

    finally:
        # Cleanup
        fixture.cleanup()